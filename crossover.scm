(define (make-1p-crossover-operator)
  (lambda (ind1 ind2)
    (let ((len (length ind1))
          (crossover-point (random (add1 len))))
      (define (cross-individuals bits1 bits2 pos acc)
        (if (zero? pos)
            (reverse acc)
            (cross-individuals (rest bits1) (rest bits2) (sub1 pos)
                               (cons (if (<= pos crossover-point) (first bits1) (first bits2)) acc))))
      (list (cross-individuals ind1 ind2 len '())
            (cross-individuals ind2 ind1 len '())))))
